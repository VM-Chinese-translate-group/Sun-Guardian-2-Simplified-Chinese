name: Paratranz To GitHub

on:
  schedule:
    # 每天北京时间早晚10点左右自动运行
    - cron: "0 1,13 * * *"
  workflow_dispatch:

jobs:
  paratranz-to-gitHub:
    name: Paratranz To GitHub
    environment: PARATRANZ_ENV
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 允许推送代码到仓库
      actions: read    # 允许读取工作流状态
      packages: write  # 允许上传 artifacts
    env:
      API_TOKEN: ${{ secrets.API_KEY }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PROJECT_ID: ${{ vars.ID }}
    outputs:
      changed: ${{ steps.commit.outputs.changed }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Cache Python dependencies
        id: cache-pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          pip install requests nbtlib

      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "VM[BOT]"

      - name: Checkout main branch
        run: git checkout main

      - name: Paratranz To GitHub
        run: python .github/workflows/para2github.py

      # ====================================================================
      # ======================= 修正后的重定向步骤 开始 ========================
      # ====================================================================
      - name: Redirect opolisutilities assets directory
        run: |
          SOURCE_DIR="CNPack/assets/test"
          DEST_PARENT_DIR="CNPack/assets/vm"

          # 检查源目录是否存在
          if [ -d "$SOURCE_DIR" ]; then
            echo "源目录 '$SOURCE_DIR' 存在，开始重定向..."

            # 确保目标上级目录存在
            mkdir -p "$DEST_PARENT_DIR"

            # 使用 mv 命令将整个源目录移动到目标上级目录中
            # mv 命令会自动处理源目录的删除
            mv "$SOURCE_DIR" "$DEST_PARENT_DIR/"

            echo "目录成功移动至 '$DEST_PARENT_DIR/'."
          else
            echo "源目录 '$SOURCE_DIR' 未找到，跳过重定向。"
          fi
      # ====================================================================
      # ======================== 修正后的重定向步骤 结束 =======================
      # ====================================================================

      - name: Commit changes
        id: commit
        run: |
          if [[ -n $(git status -s) ]]; then
            git add .
            git commit -m '从Paratranz同步翻译'
            git push origin main
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "译文变动，发布release！"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "译文不变，取消发布release！"
          fi

  release:
    name: Create Release
    runs-on: ubuntu-latest
    environment: PARATRANZ_ENV
    needs: paratranz-to-gitHub
    if: ${{ needs.paratranz-to-gitHub.outputs.changed == 'true' }}
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Upload CNPack folder
        uses: actions/upload-artifact@v4
        with:
          name: CNPack
          path: ./CNPack

      - name: Get current datetime for tag
        id: datetime
        run: echo "datetime=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      - name: Zip CNPack folder (without root dir) # 修改此步骤以避免根目录
        run: |
          # 进入 CNPack 目录
          cd ./CNPack
          # 在 CNPack 目录下执行 zip 命令，将当前目录（.）的内容打包
          # zip 文件名使用 ../ 返回到仓库根目录保存
          zip -r "../VM-CNPack-${{ env.datetime }}.zip" .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "VM-CNPack-${{ env.datetime }}.zip"
          path: "VM-CNPack-${{ env.datetime }}.zip"

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "VM-CNPack-${{ env.datetime }}.zip"
          tag: "release-${{ env.datetime }}"
          name: "测试版构建${{ env.datetime }}"
          body: "自动生成的最新汉化资源包"
          draft: false
          prerelease: true